// <auto-generated />
using System;
using Escola.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Escola.Data.Migrations
{
    [DbContext(typeof(EscolaContext))]
    partial class EscolaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Escola.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Escola.Domain.Entities.AlunoCurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunoCurso");
                });

            modelBuilder.Entity("Escola.Domain.Entities.AlunoNota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlunoCursoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Bimeste")
                        .HasColumnType("integer");

                    b.Property<decimal>("Nota")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AlunoCursoId");

                    b.ToTable("AlunoNota");
                });

            modelBuilder.Entity("Escola.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Escola.Domain.Entities.AlunoCurso", b =>
                {
                    b.HasOne("Escola.Domain.Entities.Aluno", "Aluno")
                        .WithMany("AlunoCurso")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escola.Domain.Entities.Curso", "Curso")
                        .WithMany("AlunoCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Escola.Domain.Entities.AlunoNota", b =>
                {
                    b.HasOne("Escola.Domain.Entities.AlunoCurso", "AlunoCurso")
                        .WithMany()
                        .HasForeignKey("AlunoCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlunoCurso");
                });

            modelBuilder.Entity("Escola.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("AlunoCurso");
                });

            modelBuilder.Entity("Escola.Domain.Entities.Curso", b =>
                {
                    b.Navigation("AlunoCurso");
                });
#pragma warning restore 612, 618
        }
    }
}
